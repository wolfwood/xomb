name = xomb

CC = x86_64-pc-elf-gcc
CFLAGS = -nostdlib -nodefaultlibs -g -DUSE_ASSERT -mcmodel=kernel

[*]
buildflags=-dc=ldc-xomb

[hello.d]

buildflags=-dc=ldc-xomb -I../../.. -m64

prebuild= \
\
mkdir -p dsss_imports;\
mkdir -p dsss_objs;\
mkdir -p dsss_objs/G;\
mkdir -p dsss_objs/O;\
yasm -felf64 pretexttrampoline.S -o dsss_objs/G/pretexttrampoline.o

target = hello

# we will need some post build foo to link to the runtime

postbuild = \
\
echo ; \
echo Creating Application Executable; \
echo '--> hello';\
x86_64-pc-xomb-ld -nostdlib -nodefaultlibs -Thello.ld -o hello `ls dsss_objs/G/*.o` `ls dsss_objs/O/*.o` ../../../runtimes/mindrt/mindrt.a `ls ../../../runtimes/mindrt/dsss_objs/O/*.o`;\
x86_64-pc-xomb-ld -nostdlib -nodefaultlibs -Thello-elf.ld -o hello-elf `ls dsss_objs/G/*.o` `ls dsss_objs/O/*.o` ../../../runtimes/mindrt/mindrt.a `ls ../../../runtimes/mindrt/dsss_objs/O/*.o`;\
\
echo ;\
echo Creating App Dump; \
echo '--> hello.dump';\
rm -f hello.dump && objdump  -b binary -mi386 -Mx86-64 --endian=little -D hello > hello.dump;\
rm -f hello-elf.dump && objdump -d -S -r hello-elf > hello-elf.dump;\
\
echo ;\
echo Copying;\
cp hello ../../../build/iso/binaries/.
